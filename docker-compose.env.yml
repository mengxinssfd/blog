version: '3'
services:
  #  api:
  #    image: blog_api
  #    container_name: 'blog-api'
  #    networks:
  #      - blog_net
  #    ports:
  #      - '3000:3000'
  #    depends_on:
  #      - redis
  #      - mysql
  #  front:
  #    image: blog_front
  #    container_name: 'blog-front'
  #    networks:
  #      - blog_net
  #    ports:
  #      - '8080:8080'
  redis:
    image: redis:7
    ports:
      - '6379:6379'
    volumes:
      - ./tmp/redis/redis.conf:/etc/redis/redis.conf
      - ./tmp/redis/data:/data
    networks:
      - blog_net
    command: redis-server /etc/redis/redis.conf
  mysql:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: '123456'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
      MYSQL_DATABASE: 'blog'
      MYSQL_USER: 'admin'
      MYSQL_PASSWORD: '123456'
    ports:
      - '3306:3306'
    volumes:
      - ./tmp/mysql/db:/var/lib/mysql
      - ./tmp/mysql/conf/my.cnf:/etc/my.cnf
      - ./tmp/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - blog_net
    command: --default-authentication-plugin=mysql_native_password #解决外部无法访问
  mysql_e2e:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: '123456'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
      MYSQL_DATABASE: 'blog'
      MYSQL_USER: 'admin'
      MYSQL_PASSWORD: '123456'
    ports:
      - '3307:3306'
    networks:
      - blog_net
    command: --default-authentication-plugin=mysql_native_password #解决外部无法访问

networks:
  # 相当于 docker network create blog_net
  blog_net:
